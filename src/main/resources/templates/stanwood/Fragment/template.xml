<?xml version="1.0"?>
<template format="5" 
    revision="1" 
    name="Fragment" 
    description="Creates a new Fragment" 
    minApi="7" 
    minBuildApi="8">

    <category value="Stanwood" />


    <parameter id="className" 
        name="Fragment Name" 
        type="string" 
        constraints="class|nonempty|unique" 
        default="BlankFragment" 
        suggest="${underscoreToCamelCase(layoutName?replace('fragment_',''))}Fragment" 
        help="The name of the fragment class to create" />

    <parameter id="fragmentLayoutType" 
        name="Layout Type" 
        type="enum" 
        default="blank" 
        help="The selector to use">
        <option id="blank">Blank</option>
        <option id="list">List</option>
    </parameter>

    <parameter id="useToolbar" 
        name="Add Toolbar" 
        type="boolean" 
        default="false" 
        help="If true, a AppBarLayout will be added."/>

    <parameter id="layoutName" 
        name="Fragment Layout Name" 
        type="string" 
        constraints="layout|nonempty|unique" 
        default="fragment_blank" 
        suggest="fragment_${classToResource(className?replace('Fragment',''))}" 
        help="The name of the layout to create" />

    <parameter id="useGlide" 
        name="Glide component" 
        type="boolean" 
        default="false" 
        help="If true, a Glide component will be provided"/>

    <parameter id="useVm" 
        name="Create ViewModel and Loader" 
        type="boolean" 
        default="true" 
        help="If true, a ViewModel and Loader will be created"/>

    <parameter id="canNavigate" 
        name="Can navigate" 
        type="boolean" 
        default="false" 
        visibility="useVm" 
        help="If true, default navigation handler will be added"/>

    <parameter id="viewModelName" 
        name="ViewModel Name" 
        type="string" 
        constraints="class|nonempty|unique" 
        default="BlankViewModel" 
        visibility="useVm" 
        suggest="${className?replace('Fragment','ViewModel')}" 
        help="The name of the ViewModel class to create" />

    <parameter id="loaderName" 
        name="Loader Name" 
        type="string" 
        constraints="class|nonempty|unique" 
        default="NewLoader" 
        visibility="useVm" 
        suggest="${className?replace('Fragment','Loader')}" 
        help="The name of the Loader class to create" />

    <parameter id="adapterName" 
        name="Adapter Name" 
        type="string" 
        constraints="class|nonempty|unique" 
        default="BlankLoader" 
        visibility="fragmentLayoutType == 'list'" 
        suggest="${className?replace('Fragment','Adapter')}" 
        help="The Recyclerview Adapter Name" />

    <parameter id="itemLayoutType" 
        name="Item Layout Type" 
        type="enum" 
        visibility="fragmentLayoutType == 'list'" 
        default="simple" 
        help="The selector to use">
        <option id="simple">Simple</option>
        <option id="hor">Horizontal</option>
        <option id="ver">Vertical</option>
    </parameter>

    <parameter id="itemSelectorType" 
        name="Item Selector Type" 
        type="enum" 
        default="none" 
        visibility="fragmentLayoutType == 'list'" 
        help="The selector to use">
        <option id="none">None</option>
        <option id="default">Default</option>
    </parameter>

    <parameter id="isDisableable" 
        name="Disableable" 
        type="boolean" 
        default="false" 
        visibility="fragmentLayoutType == 'list'" 
        help="If true, a property will be bound"/>

    <parameter id="isSelectable" 
        name="Selectable" 
        type="boolean" 
        default="false" 
        visibility="fragmentLayoutType == 'list'" 
        help="If true, a property will be bound"/>

    <parameter id="itemViewModelName" 
        name="Item ViewModel Name" 
        type="string" 
        constraints="class|nonempty|unique" 
        default="ItemViewModel" 
        visibility="fragmentLayoutType == 'list'" 
        suggest="${className?replace('Fragment','ItemViewModel')}" 
        help="The name of ViewModel to create" />

    <parameter id="itemLayoutName" 
        name="Item Layout Name" 
        type="string" 
        visibility="fragmentLayoutType == 'list'" 
        constraints="layout|unique|nonempty" 
        suggest="layout_${classToResource(itemViewModelName?replace('ViewModel',''))}" 
        default="layout_item" 
        help="The name of the item layout"/>

    <thumbs>
        <thumb>template_blank_fragment.png</thumb>
    </thumbs>

    <globals file="globals.xml.ftl" />
    <execute file="recipe.xml.ftl" />

</template>
